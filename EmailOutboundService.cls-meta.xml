<?xml version="1.0" encoding="UTF-8"?>
<ApexClass xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>62.0</apiVersion>
    <status>Active</status>
</ApexClass>


public class LeadConversionController {

    public LeadRepository repository;
    public ApplicationRepository applicationRepository;

    public LeadConversionController(){
        repository = new LeadRepository();
        applicationRepository = new ApplicationRepository();
    }

    public void passApplicant(Id leadId) {

        try {
            Lead leadToConvert = repository.findById(leadId);

            convertLead(leadToConvert);
            updateLeadApplication(leadToConvert);
            enqueueEmailNotification(leadToConvert.Email);

        } catch (Exception ex) {
            System.debug('Error occurred during Lead conversion: ' + ex.getMessage());
            throw new ConversionException('Error occurred during Lead conversion: ' + ex.getMessage());
        }
    }

    void convertLead(Lead leadToConvert){
        Database.LeadConvertResult result = Database.convertLead( buildLeadConvert( leadToConvert ) );

        if (!result.isSuccess()){
            throw new ConversionException('Lead conversion failed: ' + result.getErrors()[0].getMessage());
        } 
    }

    Database.LeadConvert buildLeadConvert(Lead leadToConvert){
        Database.LeadConvert leadConvert = new Database.LeadConvert();
        leadConvert.setLeadId(leadId);
        leadConvert.setDoNotCreateOpportunity(true);
        leadConvert.setConvertedStatus('Closed - Converted');

        return leadConvert;
    }

    void updateLeadApplication(Lead convertedLead){
        Application__c leadApplication = applicationRepository.findByLeadId(convertedLead.Id);
        leadApplication.Status__c = 'Confirmed';

        applicationRepository.save(leadApplication);
    }

    void enqueueEmailNotification(String leadEmail){
        System.enqueueJob(new AsyncEmailOutboundService(leadEmail));
    }

    public class ConversionException extends Exception {}

}